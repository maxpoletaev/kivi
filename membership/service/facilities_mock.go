// Code generated by MockGen. DO NOT EDIT.
// Source: facilities.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	membership "github.com/maxpoletaev/kiwi/membership"
)

// MockMemberRegistry is a mock of MemberRegistry interface.
type MockMemberRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockMemberRegistryMockRecorder
}

// MockMemberRegistryMockRecorder is the mock recorder for MockMemberRegistry.
type MockMemberRegistryMockRecorder struct {
	mock *MockMemberRegistry
}

// NewMockMemberRegistry creates a new mock instance.
func NewMockMemberRegistry(ctrl *gomock.Controller) *MockMemberRegistry {
	mock := &MockMemberRegistry{ctrl: ctrl}
	mock.recorder = &MockMemberRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMemberRegistry) EXPECT() *MockMemberRegistryMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockMemberRegistry) Add(arg0 ...membership.Member) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Add", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockMemberRegistryMockRecorder) Add(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockMemberRegistry)(nil).Add), arg0...)
}

// Expel mocks base method.
func (m *MockMemberRegistry) Expel(arg0 membership.NodeID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Expel", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Expel indicates an expected call of Expel.
func (mr *MockMemberRegistryMockRecorder) Expel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Expel", reflect.TypeOf((*MockMemberRegistry)(nil).Expel), arg0)
}

// Members mocks base method.
func (m *MockMemberRegistry) Members() []membership.Member {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Members")
	ret0, _ := ret[0].([]membership.Member)
	return ret0
}

// Members indicates an expected call of Members.
func (mr *MockMemberRegistryMockRecorder) Members() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Members", reflect.TypeOf((*MockMemberRegistry)(nil).Members))
}
