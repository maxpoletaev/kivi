// Code generated by MockGen. DO NOT EDIT.
// Source: facilities.go

// Package replication is a generated GoMock package.
package replication

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	membership "github.com/maxpoletaev/kivi/membership"
	nodeclient "github.com/maxpoletaev/kivi/nodeclient"
)

// MockCluster is a mock of Cluster interface.
type MockCluster struct {
	ctrl     *gomock.Controller
	recorder *MockClusterMockRecorder
}

// MockClusterMockRecorder is the mock recorder for MockCluster.
type MockClusterMockRecorder struct {
	mock *MockCluster
}

// NewMockCluster creates a new mock instance.
func NewMockCluster(ctrl *gomock.Controller) *MockCluster {
	mock := &MockCluster{ctrl: ctrl}
	mock.recorder = &MockClusterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCluster) EXPECT() *MockClusterMockRecorder {
	return m.recorder
}

// Conn mocks base method.
func (m *MockCluster) Conn(nodeID membership.NodeID) (nodeclient.Conn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Conn", nodeID)
	ret0, _ := ret[0].(nodeclient.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Conn indicates an expected call of Conn.
func (mr *MockClusterMockRecorder) Conn(nodeID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Conn", reflect.TypeOf((*MockCluster)(nil).Conn), nodeID)
}

// LocalConn mocks base method.
func (m *MockCluster) LocalConn() nodeclient.Conn {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LocalConn")
	ret0, _ := ret[0].(nodeclient.Conn)
	return ret0
}

// LocalConn indicates an expected call of LocalConn.
func (mr *MockClusterMockRecorder) LocalConn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LocalConn", reflect.TypeOf((*MockCluster)(nil).LocalConn))
}

// Nodes mocks base method.
func (m *MockCluster) Nodes() []membership.Node {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Nodes")
	ret0, _ := ret[0].([]membership.Node)
	return ret0
}

// Nodes indicates an expected call of Nodes.
func (mr *MockClusterMockRecorder) Nodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Nodes", reflect.TypeOf((*MockCluster)(nil).Nodes))
}

// SelfID mocks base method.
func (m *MockCluster) SelfID() membership.NodeID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelfID")
	ret0, _ := ret[0].(membership.NodeID)
	return ret0
}

// SelfID indicates an expected call of SelfID.
func (mr *MockClusterMockRecorder) SelfID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelfID", reflect.TypeOf((*MockCluster)(nil).SelfID))
}
