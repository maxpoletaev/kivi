// Code generated by MockGen. DO NOT EDIT.
// Source: facilities.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	clust "github.com/maxpoletaev/kv/nodeclient"
	membership "github.com/maxpoletaev/kv/membership"
)

// MockMemberlist is a mock of Memberlist interface.
type MockMemberlist struct {
	ctrl     *gomock.Controller
	recorder *MockMemberlistMockRecorder
}

// MockMemberlistMockRecorder is the mock recorder for MockMemberlist.
type MockMemberlistMockRecorder struct {
	mock *MockMemberlist
}

// NewMockMemberlist creates a new mock instance.
func NewMockMemberlist(ctrl *gomock.Controller) *MockMemberlist {
	mock := &MockMemberlist{ctrl: ctrl}
	mock.recorder = &MockMemberlistMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMemberlist) EXPECT() *MockMemberlistMockRecorder {
	return m.recorder
}

// Members mocks base method.
func (m *MockMemberlist) Members() []membership.Member {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Members")
	ret0, _ := ret[0].([]membership.Member)
	return ret0
}

// Members indicates an expected call of Members.
func (mr *MockMemberlistMockRecorder) Members() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Members", reflect.TypeOf((*MockMemberlist)(nil).Members))
}

// Self mocks base method.
func (m *MockMemberlist) Self() membership.Member {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Self")
	ret0, _ := ret[0].(membership.Member)
	return ret0
}

// Self indicates an expected call of Self.
func (mr *MockMemberlistMockRecorder) Self() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Self", reflect.TypeOf((*MockMemberlist)(nil).Self))
}

// MockConnRegistry is a mock of ConnRegistry interface.
type MockConnRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockConnRegistryMockRecorder
}

// MockConnRegistryMockRecorder is the mock recorder for MockConnRegistry.
type MockConnRegistryMockRecorder struct {
	mock *MockConnRegistry
}

// NewMockConnRegistry creates a new mock instance.
func NewMockConnRegistry(ctrl *gomock.Controller) *MockConnRegistry {
	mock := &MockConnRegistry{ctrl: ctrl}
	mock.recorder = &MockConnRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnRegistry) EXPECT() *MockConnRegistryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockConnRegistry) Get(arg0 membership.NodeID) (clust.Conn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(clust.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockConnRegistryMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConnRegistry)(nil).Get), arg0)
}
